// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp;

namespace TodoApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190919160049_add-test-data-1")]
    partial class addtestdata1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TodoApp.Models.Assignee", b =>
                {
                    b.Property<long>("AssigneeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("AssigneeId");

                    b.ToTable("Assignees");

                    b.HasData(
                        new { AssigneeId = 1L, Email = "red.fox.tester@greenfox.hu", Name = "Red Fox" },
                        new { AssigneeId = 2L, Email = "blue.fox.tester@greenfox.hu", Name = "Blue Fox" }
                    );
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.Property<long>("TodoId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssigneeId");

                    b.Property<string>("Description");

                    b.Property<bool>("Done");

                    b.Property<string>("Title");

                    b.HasKey("TodoId");

                    b.HasIndex("AssigneeId");

                    b.ToTable("Todos");

                    b.HasData(
                        new { TodoId = 1L, AssigneeId = 1L, Description = "You can create new Todos in the menu!", Done = false, Title = "Create your first Todo!" },
                        new { TodoId = 2L, AssigneeId = 1L, Description = "Use the built-in OnGet() method of the Razor page", Done = false, Title = "Refactor Assignee select-list when adding Todo" }
                    );
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.HasOne("TodoApp.Models.Assignee")
                        .WithMany("TodoList")
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
